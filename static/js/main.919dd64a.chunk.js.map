{"version":3,"sources":["components/Login/Login.module.css","components/Dialogs/Dialogs.module.css","assets/images/UserWithoutPhoto.png","components/Users/Users.module.css","redux/dialogs-reducer.ts","api/api.js","utuls/object-helpers.js","redux/users-reducer.ts","redux/profile-reducer.ts","redux/auth-reducer.ts","redux/app-reducer.ts","redux/redux-store.ts","components/Common/FormToAdd/index.jsx","components/Common/ListItems/index.jsx","components/Dialogs/Dialogs.jsx","components/hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx","components/Common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","components/Common/Preloader/Preloader.js","redux/users-selectors.ts","components/Users/UsersContainer.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileBlockInfoEdit.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Login/Login.jsx","components/Header/Header.jsx","App.jsx","index.js"],"names":["module","exports","title","text","dataText","dialogs","__webpack_require__","p","users","initialState","dialogData","id","name","messageData","message","newMessageBody","instance","axios","withCredentials","baseURL","headers","API-KEY","usersAPI","getUsers","currentPage","arguments","length","undefined","pageSize","get","concat","then","response","data","follow","userId","post","unFollow","delete","profileAPI","status","put","photoFile","formData","FormData","append","Content-Type","profile","authAPI","email","password","rememberMe","captcha","securityAPI","updateObjectInArray","items","itemId","objPropName","newObjProps","map","m","Object","objectSpread2","_regeneratorRuntime","Op","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","geUsersSelector","usersPage","totalUsersCount","isFetching","followingInProgress","followSuccess","unFollowSuccess","toggleIsFetching","toggleIsFollowingProgress","followUnfollowFlow","_ref2","asyncToGenerator","_callee2","dispatch","apiMethod","actionCreator","_context2","resultCode","_x2","_x3","_x4","_x5","apply","profile_reducer_regeneratorRuntime","postData","likecount","setStatus","getUserProfile","_ref","_callee","_context","_x","auth_reducer_regeneratorRuntime","geAuthSelector","auth","login","isAuth","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","setError","errorMessage","getAuthUserData","_response$data$data","_login","getCaptchaUrl","_ref4","_callee4","_context4","url","app_reducer_regeneratorRuntime","initialized","rootReducers","combineReducers","messagesPage","action","messageBody","toConsumableArray","Math","random","toFixed","toString","profilePage","newPost","newPostText","photos","followed","count","filter","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","___store___","FormToAdd","onSubmit","form","buttonText","react_default","a","createElement","es_form","onFinish","style","maxWidth","marginBottom","Item","TextArea","allowClear","rows","placeholder","es_button","htmlType","ListItems","posts","avatar","list","itemLayout","dataSource","renderItem","item","Meta","alignItems","es_avatar","backgroundColor","icon","UserOutlined","Fragment","dist","to","description","Dialogs","props","_Form$useForm","Form","useForm","slicedToArray","className","Common_ListItems","FormToAdd_FormToAdd","sendMessage","resetFields","mapStateToPropsForRedirect","connect","sendMessageAC","Component","RedirectComponent","_React$Component","inherits","_super","createSuper","classCallCheck","createClass","react_router_dist","React","Paginator","totalItemsCount","onPageChanged","useSelector","pagination","total","current","onChange","showSizeChanger","showQuickJumper","showTotal","userPhoto","UserWithoutPhoto","User","user","Card","card","hoverable","width","justifySelf","margin","cover","src","small","large","alt","disabled","some","onClick","Users","onClickPageChangedHandler","Common_Paginator_Paginator","Users_User","antIcon","LoadingOutlined","fontSize","spin","Preloader","space","display","justifyContent","position","left","right","top","bottom","zIndex","indicator","getUsersSelector","createSelector","u","UsersContainer","_this","_len","args","Array","_key","pageNumber","Common_Preloader_Preloader","components_Users_Users","_geUsersSelector","_ref3","_callee3","_context3","bind","_x6","_x7","page","getAPI","totalCount","ProfileStatus","statusText","isOwner","_useState","useState","_useState2","editMode","setEditMode","_useState3","_useState4","statusLocal","setStatusLocal","useDispatch","useEffect","onDoubleClick","EditOutlined","marginLeft","input","e","currentTarget","autoFocus","onBlur","t0","ProfileBlockInfoEdit","lookingForAJob","setLookingForAJob","contacts","facebook","github","instagram","mainLink","twitter","vk","website","youtube","fullName","lookingForAJobDescription","aboutMe","labelCol","span","wrapperCol","initialValues","label","es_checkbox","checked","divider","orientation","ProfileInfo","goToEditMode","es_image","borderRadius","border","padding","background","cursor","file","target","files","ProfileStatus_ProfileStatus","ProfileInfo_ProfileBlockInfoEdit","profileData","_ref5","_callee5","getState","_context5","stopSubmit","_error","messages","ProfileInfo_ProfileBlockInfo","ProfileBlockInfo","arr","descriptions","bordered","column","labelStyle","size","contact","ProfileInfo_Contact","contactTitle","contactValue","Contact","fontWeight","href","MyPosts","memo","addPost","newPostBody","MyPostsContainer","addPostAC","Profile","ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","ProfileContainer","_useSelector","geProfileSelector","authorizedUserId","navigate","useNavigate","params","useParams","getStatus","Profile_Profile","Login","remember","username","autoComplete","rules","required","Password","valuePropName","offset","textAlign","color","HeaderContainer","Header","Layout","Content","Footer","Sider","getItem","children","HomeOutlined","UsergroupAddOutlined","MailOutlined","App","colorBgContainer","theme","useToken","token","layout","Header_HeaderContainer","menu","mode","defaultSelectedKeys","height","minHeight","path","element","DialogsContainer","exact","Profile_ProfileContainer","Users_UsersContainer","components_Login_Login","ReactDOM","render","react_redux_es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.919dd64a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Login_title__bh47u\",\"text\":\"Login_text__llltc\",\"dataText\":\"Login_dataText__1W4jP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\"};","module.exports = __webpack_public_path__ + \"static/media/UserWithoutPhoto.80dc2fdf.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__2Iv27\"};","//types\ntype actionType = {\n    type: typeof SEND_MESSAGE\n    newMessageBody?: string\n}\nconst SEND_MESSAGE = 'SEND_MESSAGE'\ntype dialogStateType = typeof initialState\ntype dialogType = {\n    id: number\n    name: string\n}\ntype messageType = {\n    id: number\n    message: string\n}\ntype sendMessageACType = {\n    type: typeof SEND_MESSAGE\n    newMessageBody: string\n}\n\n//initial state\nlet initialState = {\n    dialogData: [\n        {id: 1, name: 'Alex'},\n        {id: 2, name: 'Artem'},\n        {id: 3, name: 'Daria'},\n        {id: 4, name: 'Dmitriy'},\n    ] as Array<dialogType>,\n    messageData: [\n        {id: 1, message: 'Hello World!'},\n        {id: 2, message: 'How are you?'},\n        {id: 3, message: 'What do you do?'}\n    ] as Array<messageType>,\n    newMessageBody: '',\n}\n\n//reducer\nexport const dialogsReducer = (state: dialogStateType = initialState, action: actionType): dialogStateType => {\n    switch (action.type) {\n        case SEND_MESSAGE : {\n            let messageBody = action.newMessageBody;\n            return <dialogStateType>{\n                ...state,\n                messageData: [...state.messageData,\n                    {\n                        id: ((Math.random() * 100).toFixed(2)).toString(),\n                        message: messageBody\n                    }]\n            };\n        }\n        default:\n            return state;\n    }\n}\n\n//action creator\nexport const sendMessageAC = (newMessageBody: string): sendMessageACType => ({type: SEND_MESSAGE, newMessageBody})","import * as axios from \"axios\";\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\n    headers: {\n        \"API-KEY\": \"e72442e7-e84c-4575-88b8-fbca240ffc79\"\n    }\n})\n\nexport const usersAPI = {\n    getUsers(currentPage = 1, pageSize) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\n            .then(response => response.data);\n    },\n    follow(userId) {\n        return instance.post(`follow/${userId}`,)\n    },\n    unFollow(userId) {\n        return instance.delete(`follow/${userId}`,)\n    }\n}\nexport const profileAPI = {\n    getProfile(userId) {\n        return instance.get(`profile/` + userId)\n    },\n    getStatus(userId) {\n        return instance.get(`profile/status/` + userId)\n    },\n    updateStatus(status) {\n        return instance.put(`profile/status/`, {status: status})\n    },\n    savePhoto(photoFile) {\n        const formData = new FormData();\n        formData.append('image', photoFile)\n\n        return instance.put(`profile/photo`, formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        })\n    },\n    saveProfile(profile) {\n        return instance.put(`profile`, profile)\n    },\n}\nexport const authAPI = {\n    me() {\n        return instance.get(`auth/me`)\n    },\n    login(email, password, rememberMe = false, captcha = null) {\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha})\n    },\n    logout() {\n        return instance.delete(`auth/login`)\n    },\n\n}\nexport const securityAPI = {\n    getCaptchaUrl() {\n        return instance.get(`security/get-captcha-url`)\n    }\n}","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\n    return items.map(m => {\n        if (m[objPropName] === itemId) {\n            return {...m, ...newObjProps}\n        }\n        return m;\n    })\n}","import {usersAPI, usersAPI as getAPI} from '../api/api';\nimport {updateObjectInArray} from '../utuls/object-helpers';\nimport {appStateType} from './redux-store';\n\n//types\nconst FOLLOW_BUTTON = 'FOLLOW_BUTTON'\nconst UNFOLLOW_BUTTON = 'UNFOLLOW_BUTTON'\nconst SET_USERS = 'SET_USERS'\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT'\nexport const TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS'\n\ntype followSuccessType = { type: typeof FOLLOW_BUTTON, userId: number }\ntype unFollowSuccessType = { type: typeof UNFOLLOW_BUTTON, userId: number }\ntype setUsersType = { type: typeof SET_USERS, users: usersType }\ntype setCurrentPageType = { type: typeof SET_CURRENT_PAGE, currentPage: number }\ntype setTotalUsersCountType = { type: typeof SET_TOTAL_USERS_COUNT, count: number }\ntype toggleIsFetchingType = { type: typeof TOGGLE_IS_FETCHING, isFetching: boolean }\ntype toggleIsFollowingProgressType = { type: typeof TOGGLE_IS_FOLLOWING_PROGRESS, isFetching: boolean, userId: number }\n\nexport type photosType = {\n    small: null | string\n    large: null | string\n}\n\nexport type usersType = {\n    name: string,\n    id: number,\n    uniqueUrlName: null,\n    photos: photosType,\n    status: null,\n    followed: boolean,\n}\n\n// selector\nexport const geUsersSelector = (state: appStateType) => {\n    return state.usersPage\n}\n\n//initial state\nlet initialState = {\n    users: [] as Array<usersType>,\n    pageSize: 16,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: false,\n    followingInProgress: [] as Array<number>\n}\nexport type userStateType = typeof initialState\n\n//reducer\nexport const usersReducer = (state: userStateType = initialState, action: any) => {\n    switch (action.type) {\n        case FOLLOW_BUTTON: {\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})\n            }\n        }\n        case UNFOLLOW_BUTTON: {\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\n            }\n        }\n        case SET_USERS: {\n            return {...state, users: [...action.users]}\n        }\n        case SET_CURRENT_PAGE: {\n            return {...state, currentPage: action.currentPage}\n        }\n        case SET_TOTAL_USERS_COUNT: {\n            return {...state, totalUsersCount: action.count}\n        }\n        case TOGGLE_IS_FETCHING: {\n            return {...state, isFetching: action.isFetching}\n        }\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\n            return {\n                ...state, followingInProgress: action.isFetching ?\n                    [...state.followingInProgress, action.userId] :\n                    state.followingInProgress.filter(id => id != action.userId)\n            }\n        }\n        default:\n            return state;\n    }\n}\n\n//action creators\nexport const followSuccess = (userId: number): followSuccessType => ({type: FOLLOW_BUTTON, userId})\nexport const unFollowSuccess = (userId: number): unFollowSuccessType => ({type: UNFOLLOW_BUTTON, userId})\nexport const setUsers = (users: usersType): setUsersType => ({type: SET_USERS, users})\nexport const setCurrentPage = (currentPage: number): setCurrentPageType => ({type: SET_CURRENT_PAGE, currentPage})\nexport const setTotalUsersCount = (totalUsers: number): setTotalUsersCountType => ({\n    type: SET_TOTAL_USERS_COUNT,\n    count: totalUsers\n})\nexport const toggleIsFetching = (isFetching: boolean): toggleIsFetchingType => ({type: TOGGLE_IS_FETCHING, isFetching})\nexport const toggleIsFollowingProgress = (isFetching: boolean, userId: number): toggleIsFollowingProgressType => ({\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\n    isFetching,\n    userId\n})\n\n//thanks\nexport const requestUsers = (page: any, pageSize: any) => {\n    return async (dispatch: any) => {\n        dispatch(toggleIsFetching(true))\n        dispatch(setCurrentPage(page))\n\n        const data = await getAPI.getUsers(page, pageSize)\n        dispatch(setUsers(data.items));\n        dispatch(setTotalUsersCount(data.totalCount));\n        dispatch(toggleIsFetching(false))\n    }\n}\n\nconst followUnfollowFlow = async (dispatch: any, userId: any, apiMethod: any, actionCreator: any) => {\n    dispatch(toggleIsFollowingProgress(true, userId))\n    const response = await apiMethod(userId)\n    if (response.data.resultCode === 0) {\n        dispatch(actionCreator(userId))\n    }\n    dispatch(toggleIsFollowingProgress(false, userId))\n}\n\nexport const follow = (userId: any) => {\n    return async (dispatch: any) => {\n        await followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess)\n    }\n}\nexport const unFollow = (userId: any) => {\n    return async (dispatch: any) => {\n        await followUnfollowFlow(dispatch, userId, usersAPI.unFollow.bind(usersAPI), unFollowSuccess)\n    }\n}\n\n","import {profileAPI} from '../api/api';\nimport {stopSubmit} from 'redux-form';\nimport {photosType, TOGGLE_IS_FETCHING} from './users-reducer';\nimport {appStateType} from './redux-store';\n\n//types\nconst ADD_POST = 'ADD_POST'\nconst SET_USER_PROFILE = 'SET_USER_PROFILE'\nconst SET_STATUS = 'SET_STATUS'\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS'\n\ntype profileStateType = typeof initialState\ntype postType = { id: string, message: string, likecount: string }\ntype profileType = {\n    userId: number\n    lookingForAJob: boolean\n    lookingForAJobDescription: string\n    fullName: string\n    contacts: {\n        github: string\n        vk: string\n        facebook: string\n        instagram: string\n        twitter: string\n        website: string\n        youtube: string\n        mainLink: string\n    }\n}\ntype addPostACType = {\n    type: typeof ADD_POST,\n    values: string\n}\ntype setUserProfileType = {\n    type: typeof SET_USER_PROFILE,\n    profile: profileType\n}\ntype setStatusType = {\n    type: typeof SET_STATUS,\n    status: string\n}\ntype savePhotoSuccessType = {\n    type: typeof SAVE_PHOTO_SUCCESS,\n    photos: photosType\n}\ntype toggleIsFetchingType = { type: typeof TOGGLE_IS_FETCHING, isFetching: boolean }\n\n\n// selector\nexport const geProfileSelector = (state: appStateType) => {\n    return state.profilePage\n}\n\n//initial state\nlet initialState = {\n    postData: [\n        {id: '1', message: 'How are you today?', likecount: '12'},\n        {id: '2', message: 'Hello World!', likecount: '124'},\n        {id: '3', message: 'It is my first post', likecount: '67'},\n    ] as Array<postType>,\n    profile: null as null | profileType,\n    status: '',\n    isFetching: false\n}\n\n//reducer\nexport const profileReducer = (state: profileStateType = initialState, action: any): profileStateType => {\n    switch (action.type) {\n        case ADD_POST: {\n            let newPost = {\n                id: ((Math.random() * 100).toFixed(2)).toString(),\n                message: action.values,\n                likecount: 0,\n            };\n            return <profileStateType>{\n                ...state,\n                postData: [newPost, ...state.postData],\n                newPostText: ''\n            }\n        }\n\n        case SET_USER_PROFILE: {\n            return {\n                ...state,\n                profile: action.profile\n            }\n        }\n        case SET_STATUS: {\n            return {\n                ...state,\n                status: action.status\n            }\n        }\n        case SAVE_PHOTO_SUCCESS: {\n            return <profileStateType>{\n                ...state,\n                profile: {...state.profile, photos: action.photos}\n            }\n        }\n        case TOGGLE_IS_FETCHING: {\n            return {...state, isFetching: action.isFetching}\n        }\n        default:\n            return state;\n    }\n}\n\n//action creators\nexport const addPostAC = (values: string): addPostACType => ({type: ADD_POST, values})\nconst setUserProfile = (profile: profileType): setUserProfileType => ({type: SET_USER_PROFILE, profile})\nconst setStatus = (status: string): setStatusType => ({type: SET_STATUS, status})\nconst savePhotoSuccess = (photos: photosType): savePhotoSuccessType => ({type: SAVE_PHOTO_SUCCESS, photos})\nexport const toggleIsFetching = (isFetching: boolean): toggleIsFetchingType => ({type: TOGGLE_IS_FETCHING, isFetching})\n\n//thanks\nexport const getUserProfile = (userId: number) => async (dispatch: any) => {\n    dispatch(toggleIsFetching(true))\n    const response = await profileAPI.getProfile(userId)\n    dispatch(setUserProfile(response.data));\n    dispatch(toggleIsFetching(false))\n}\n\nexport const getStatus = (userId: number) => async (dispatch: any) => {\n    dispatch(toggleIsFetching(true))\n    const response = await profileAPI.getStatus(userId)\n    dispatch(setStatus(response.data));\n    dispatch(toggleIsFetching(false))\n}\nexport const updateStatus = (status: string) => async (dispatch: any) => {\n    dispatch(toggleIsFetching(true))\n    try {\n        const response = await profileAPI.updateStatus(status)\n        if (response.data.resultCode === 0) {\n            dispatch(setStatus(status));\n        }\n    } catch (error) {\n        //some error we can add dispatch\n    }\n    dispatch(toggleIsFetching(false))\n}\nexport const savePhoto = (file: any) => async (dispatch: any) => {\n    dispatch(toggleIsFetching(true))\n    // @ts-ignore\n    const response = await profileAPI.savePhoto(file);\n    if (response.data.resultCode === 0) {\n        dispatch(savePhotoSuccess(response.data.data.photos));\n    }\n    dispatch(toggleIsFetching(false))\n\n}\nexport const saveProfile = (profileData: any) => async (dispatch: any, getState: any) => {\n    dispatch(toggleIsFetching(true))\n    const userId = getState().auth.id;\n    // @ts-ignore\n    const response = await profileAPI.saveProfile(profileData);\n    if (response.data.resultCode === 0) {\n        dispatch(getUserProfile(userId));\n    } else {\n        dispatch(stopSubmit('edit-profile', {_error: response.data.messages[0]}))\n        return Promise.reject(response.data.messages[0])\n    }\n    dispatch(toggleIsFetching(false))\n}\n","import {authAPI, securityAPI} from '../api/api';\nimport {appStateType} from './redux-store';\n\n//types\nconst SET_USER_DATA = 'AUTH_SET_USER_DATA'\nconst GET_CAPTCHA_URL_SUCCESS = 'GET_CAPTCHA_URL_SUCCESS'\nconst SET_ERROR = 'SET_ERROR'\ntype stateType = typeof initialState;\ntype setAuthUserDataPayloadType = { id: number | null, email: string | null, login: string | null, isAuth: boolean }\ntype setAuthUserDataType = {\n    type: typeof SET_USER_DATA,\n    payload: setAuthUserDataPayloadType\n}\ntype getCaptchaUrlSuccessType = { type: typeof GET_CAPTCHA_URL_SUCCESS, payload: { captchaUrl: string } }\n\n// selector\nexport const geAuthSelector = (state: appStateType) => {\n    return state.auth\n}\n\n//initial state\nlet initialState = {\n    id: null as number | null,\n    email: null as string | null,\n    login: null as string | null,\n    isAuth: false,\n    captchaUrl: null as string | null,\n    error: ''\n}\n\n//reducer\nexport const authReducer = (state: stateType = initialState, action: any): stateType => {\n    switch (action.type) {\n        case SET_USER_DATA:\n        case GET_CAPTCHA_URL_SUCCESS: {\n            return {...state, ...action.payload}\n        }\n        case SET_ERROR: {\n            return {...state, error: action.payload}\n        }\n\n        default:\n            return state;\n    }\n}\n\n//action creators\nexport const setAuthUserData = (id: number | null, email: string | null, login: string | null, isAuth: boolean): setAuthUserDataType => (\n    {type: SET_USER_DATA, payload: {id, email, login, isAuth}})\n\nexport const getCaptchaUrlSuccess = (captchaUrl: string): getCaptchaUrlSuccessType => ({\n    type: GET_CAPTCHA_URL_SUCCESS,\n    payload: {captchaUrl}\n})\n\nexport const setError = (errorMessage: string): any => ({type: SET_ERROR, payload: errorMessage})\n\n//thanks\nexport const getAuthUserData = () => async (dispatch: any) => {\n    let response = await authAPI.me();\n    if (response.data.resultCode === 0) {\n        let {id, login, email} = response.data.data;\n        dispatch(setAuthUserData(id, email, login, true))\n    }\n}\n\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: any) => async (dispatch: any) => {\n    const response = await authAPI.login(email, password, rememberMe, captcha)\n    if (response.data.resultCode === 0) {\n        dispatch(getAuthUserData())\n    } else {\n        if (response.data.resultCode === 10) {\n            dispatch(getCaptchaUrl())\n        }\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error'\n        dispatch(setError(message))\n    }\n}\n\nexport const logout = () => async (dispatch: any) => {\n    const response = await authAPI.logout()\n    if (response.data.resultCode === 0) {\n        dispatch(setAuthUserData(null, null, null, false))\n    }\n    dispatch(setError(''))\n}\n\nexport const getCaptchaUrl = () => async (dispatch: any) => {\n    const response = await securityAPI.getCaptchaUrl()\n    const captchaUrl = response.data.url\n    dispatch(getCaptchaUrlSuccess(captchaUrl))\n}\n\n","import {getAuthUserData} from './auth-reducer';\n\n//types\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS'\ntype stateType = { initialized: boolean }\ntype initializedSuccessActionType = { type: typeof INITIALIZED_SUCCESS }\ntype actionType = { type: typeof INITIALIZED_SUCCESS }\n\n//initial state\nlet initialState: stateType = {initialized: false}\n\n//reducer\nexport const appReducer = (state = initialState, action: actionType): stateType => {\n    switch (action.type) {\n        case INITIALIZED_SUCCESS: {\n            return {\n                ...state,\n                initialized: true\n            }\n        }\n        default:\n            return state;\n    }\n}\n\n//Action Creator\nexport const initializedSuccess = (): initializedSuccessActionType => ({type: INITIALIZED_SUCCESS})\n\n//Thank\nexport const initializeApp = () => async (dispatch: any) => {\n    await dispatch(getAuthUserData());\n    dispatch(initializedSuccess());\n};\n\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\nimport {dialogsReducer} from \"./dialogs-reducer\";\nimport {profileReducer} from \"./profile-reducer\";\nimport {usersReducer} from \"./users-reducer\";\nimport {authReducer} from \"./auth-reducer\";\nimport thunkMiddleware from \"redux-thunk\";\nimport {appReducer} from \"./app-reducer\";\n\ntype rootReducerType = typeof rootReducers\nexport type appStateType = ReturnType<rootReducerType>\n\nlet rootReducers = combineReducers({\n    messagesPage: dialogsReducer,\n    profilePage: profileReducer,\n    usersPage: usersReducer,\n    auth: authReducer,\n    app: appReducer,\n})\n\n// @ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nlet store = createStore(rootReducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\n\n// @ts-ignore\nwindow.___store___ = store\nexport default store;","import React from 'react';\nimport {Button, Form} from 'antd';\nimport TextArea from 'antd/es/input/TextArea';\n\nexport const FormToAdd = ({onSubmit, form, name, buttonText}) => {\n    return (\n        <Form name={name}\n              form={form}\n              onFinish={onSubmit}\n              style={{maxWidth: '400px', marginBottom: '20px'}}\n        >\n            <Form.Item name={name}>\n                <TextArea allowClear\n                          rows={4}\n                          placeholder=\"Enter your message\"/>\n            </Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">{buttonText}</Button>\n        </Form>\n    );\n};","import React from 'react';\nimport {Avatar, List} from 'antd';\nimport {UserOutlined} from '@ant-design/icons';\nimport {Link} from 'react-router-dom';\n\nconst ListItems = ({posts, avatar}) => {\n    \n    return (\n        <List\n            itemLayout=\"horizontal\"\n            dataSource={posts}\n            renderItem={(item) => (\n                <List.Item>\n                    <List.Item.Meta\n                        style={{alignItems: 'center'}}\n                        avatar={avatar && <Avatar style={{backgroundColor: '#87d068'}} icon={<UserOutlined/>}/>}\n                        title={<>\n                            {item.message && <p>{item.message}</p>}\n                            {item.name &&  <Link to={'/dialogs/' + item.id}>{item.name}</Link> }\n                        </>}\n                        description={item.likecount && <p>Likes: {item.likecount}</p>}\n                    />\n                </List.Item>\n            )}\n        />\n    );\n};\n\nexport default ListItems;","import React from 'react';\nimport style from './Dialogs.module.css'\nimport {FormToAdd} from '../Common/FormToAdd';\nimport {Form} from 'antd';\nimport ListItems from '../Common/ListItems';\n\nconst Dialogs = (props) => {\n    const [form] = Form.useForm();\n\n    let addNewMessage = (values) => {\n        props.sendMessage(values.newMessageBody)\n        form.resetFields();\n    }\n\n    return (\n        <div className={style.dialogs}>\n            <div>\n                <h3>Friends</h3>\n                <ListItems posts={props.messagesPage.dialogData} avatar/>\n            </div>\n            <div>\n                <h3>Messages</h3>\n                <ListItems posts={props.messagesPage.messageData}/>\n                <FormToAdd onSubmit={addNewMessage} form={form} name=\"newMessageBody\" buttonText=\"Add message\"/>\n            </div>\n        </div>\n    )\n}\n\nexport default Dialogs;","import React from 'react';\nimport {connect} from 'react-redux';\nimport {Navigate} from 'react-router-dom';\n\nlet mapStateToPropsForRedirect = (state) => {\n    return {\n        isAuth: state.auth.isAuth\n    }\n}\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Navigate to={'/login'}/>\n            return <Component {...this.props} />\n        }\n    }\n\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n\n    return ConnectedAuthRedirectComponent\n}","import React from 'react';\nimport {sendMessageAC} from \"../../redux/dialogs-reducer\";\nimport {connect} from \"react-redux\";\nimport Dialogs from \"./Dialogs\";\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nlet mapStateToProps = (state) => {\n    return {\n        messagesPage : state.messagesPage,\n    }\n}\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        sendMessage: (newMessageBody) => {\n            dispatch(sendMessageAC(newMessageBody))\n        }\n    }\n}\n\nexport default compose (\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n) (Dialogs)\n\n","import React from 'react';\nimport {Pagination} from 'antd';\nimport {useSelector} from 'react-redux';\n\nconst Paginator = ({totalItemsCount, currentPage, onPageChanged}) => {\n    const pageSize = useSelector((state => state.usersPage.pageSize))\n\n    return <Pagination\n        total={totalItemsCount}\n        current={currentPage}\n        pageSize={pageSize}\n        onChange={onPageChanged}\n        showSizeChanger={false}\n        showQuickJumper\n        showTotal={(totalItemsCount) => `Total ${totalItemsCount} items`}\n    />\n}\n\nexport default Paginator\n\n\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {Button, Card} from 'antd';\nimport UserWithoutPhoto from '../../assets/images/UserWithoutPhoto.png'\n\nexport const userPhoto = UserWithoutPhoto\n\nlet User = ({user, followingInProgress, unFollow, follow}) => {\n    const {Meta} = Card;\n\n    return <Card\n        hoverable\n        style={{\n            width: 240,\n            justifySelf: 'center',\n            margin: '20px 0'\n        }}\n        cover={<Link to={'/profile/' + user.id}>\n            <img style={{width: '100%'}}\n                 src={user.photos.small != null ? user.photos.large : userPhoto}\n                 alt=\"photo\"/>\n        </Link>}\n    >\n        <Meta title={user.name} description={user.status}/>\n        <div style={{margin: '10px auto'}}>\n            {user.followed ?\n                <Button disabled={followingInProgress.some(id => id === user.id)}\n                        onClick={() => unFollow(user.id)}>Unfollow</Button>\n                :\n                <Button disabled={followingInProgress.some(id => id === user.id)}\n                        onClick={() => follow(user.id)}>Follow</Button>\n            }\n        </div>\n    </Card>\n\n}\nexport default User","import React from 'react';\nimport Paginator from '../Common/Paginator/Paginator';\nimport User from './User';\nimport style from './Users.module.css'\n\nlet Users = ({\n                 totalUsersCount,\n                 currentPage,\n                 onClickPageChangedHandler,\n                 users,\n                 followingInProgress,\n                 unFollow,\n                 follow\n             }) => {\n\n    return <div>\n        <Paginator totalItemsCount={totalUsersCount}\n                   currentPage={currentPage}\n                   onPageChanged={onClickPageChangedHandler}/>\n\n        <div className={style.users}>\n            {users.map(m => <User key={m.id}\n                                  user={m}\n                                  followingInProgress={followingInProgress}\n                                  unFollow={unFollow}\n                                  follow={follow}\n\n            />)}\n        </div>\n    </div>\n}\nexport default Users","import React from 'react';\nimport {Space, Spin} from 'antd';\nimport {LoadingOutlined} from '@ant-design/icons';\n\nconst antIcon = <LoadingOutlined style={{fontSize: 80}} spin/>\n\nconst Preloader = () => (\n    <Space style={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center ',\n        position: 'absolute',\n        left: '0',\n        right: '0',\n        top: '0',\n        bottom: '0',\n        backgroundColor: 'rgba(1,26,103,0.1)',\n        zIndex: '5'\n    }}>\n        <Spin indicator={antIcon}/>\n    </Space>\n);\n\nexport default Preloader;","import {createSelector} from \"reselect\";\nimport {appStateType} from \"./redux-store\";\nimport {usersType} from './users-reducer';\n\nexport const getUsers = (state: appStateType) => {\n    return state.usersPage.users\n}\nexport const getUsersSelector = createSelector(getUsers,  (users: Array<usersType>) => {\n    return users.filter(u => true)\n})","import React from 'react';\nimport {connect} from 'react-redux';\nimport {follow, geUsersSelector, requestUsers, unFollow} from '../../redux/users-reducer';\nimport Users from './Users';\nimport Preloader from '../Common/Preloader/Preloader';\nimport {compose} from 'redux';\nimport {getUsersSelector} from '../../redux/users-selectors';\n\nclass UsersContainer extends React.Component {\n    componentDidMount() {\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\n    };\n\n    onClickPageChangedHandler = (pageNumber) => {\n        this.props.getUsers(pageNumber, this.props.pageSize);\n    }\n\n    render() {\n        return <>\n            {this.props.isFetching ? <Preloader/> : null}\n            <Users totalUsersCount={this.props.totalUsersCount}\n                   currentPage={this.props.currentPage}\n                   users={this.props.users}\n                   follow={this.props.follow}\n                   unFollow={this.props.unFollow}\n                   onClickPageChangedHandler={this.onClickPageChangedHandler}\n                   followingInProgress={this.props.followingInProgress}\n            />\n        </>\n    }\n}\n\nlet mapStateToProps = (state) => {\n    const {totalUsersCount, currentPage, isFetching, followingInProgress, pageSize} = geUsersSelector(state)\n    return {\n        totalUsersCount, currentPage, isFetching, followingInProgress,  pageSize,\n        users: getUsersSelector(state),\n    }\n};\n\nexport default (compose(\n    connect(mapStateToProps, {follow, unFollow, getUsers: requestUsers}))(UsersContainer));","import React, {useEffect, useState} from 'react';\nimport {updateStatus} from '../../../redux/profile-reducer';\nimport {useDispatch} from 'react-redux';\nimport {Input} from 'antd';\nimport {EditOutlined} from '@ant-design/icons';\n\nexport const ProfileStatus = ({statusText, isOwner}) => {\n    let [editMode, setEditMode] = useState(false)\n    let [statusLocal, setStatusLocal] = useState(statusText)\n    const dispatch = useDispatch()\n\n    useEffect(() => setStatusLocal(statusText), [statusText])\n\n    const activateEditMode = () => isOwner && setEditMode(true)\n\n    const deactivateEditMode = () => {\n        isOwner &&\n        setEditMode(false)\n        dispatch(updateStatus(statusLocal));\n    }\n\n    const onStatusChange = (e) => setStatusLocal(e.currentTarget.value)\n\n    return (\n        <div style={{margin: '10px'}}>\n            {!editMode && <div style={{fontSize: '20px'}}>\n                <span onDoubleClick={activateEditMode}>{statusText || 'No status'}</span>\n                {isOwner && <EditOutlined style={{marginLeft: '10px'}}\n                                          title=\"To edit, you need to double-click on the status\"/>}\n            </div>}\n\n            {editMode && <div>\n                <Input onChange={onStatusChange} autoFocus onBlur={deactivateEditMode}\n                       value={statusLocal}/>\n            </div>}\n        </div>\n    )\n}\n","import React, {useState} from 'react';\nimport {Button, Checkbox, Divider, Form, Input} from 'antd';\nimport TextArea from 'antd/es/input/TextArea';\n\nconst ProfileBlockInfoEdit = ({onSubmit, profile}) => {\n    const [lookingForAJob, setLookingForAJob] = useState(profile.lookingForAJob)\n\n    let addChanges = (values) => {\n        const contacts = {\n            facebook: values.facebook || null,\n            github: values.github || null,\n            instagram: values.instagram || null,\n            mainLink: values.mainLink || null,\n            twitter: values.twitter || null,\n            vk: values.vk || null,\n            website: values.website || null,\n            youtube: values.youtube || null,\n        }\n        onSubmit({\n            fullName: values.fullName || null,\n            lookingForAJob: lookingForAJob,\n            lookingForAJobDescription: values.lookingForAJobDescription || null,\n            aboutMe: values.aboutMe || null,\n            contacts: contacts\n        })\n    }\n\n    return (\n        <Form name=\"changeProfile\"\n              onFinish={addChanges}\n              labelCol={{span: 4}}\n              wrapperCol={{span: 8}}\n              initialValues={{...profile, ...profile.contacts}}\n        >\n            {<Button type=\"primary\" htmlType=\"submit\" style={{margin: \"10px\"}}>Save</Button>}\n            <Form.Item name=\"fullName\" label=\"Full name:\"><Input placeholder=\"Full name\"/></Form.Item>\n            <Form.Item name=\"lookingForAJob\" label=\"Looking for a job:\">\n                <Checkbox checked={lookingForAJob}\n                          onChange={() => setLookingForAJob(!lookingForAJob)}/>\n            </Form.Item>\n            <Form.Item name=\"lookingForAJobDescription\" label=\"Description about a job:\">\n                <TextArea allowClear\n                          placeholder=\"Description about a job\"/>\n            </Form.Item>\n            <Form.Item name=\"aboutMe\" label=\"About me:\">\n                <TextArea allowClear\n                          placeholder=\"About me\"/>\n            </Form.Item>\n\n            <Divider orientation=\"left\">Contacts:</Divider>\n            {Object.keys(profile.contacts).map(key => {\n                return <Form.Item name={key} label={key + ':'} key={key}>\n                    <Input/>\n                </Form.Item>\n            })}\n        </Form>\n    )\n}\n\nexport default ProfileBlockInfoEdit","import React, {useState} from 'react';\nimport Preloader from '../../Common/Preloader/Preloader';\nimport {ProfileStatus} from './ProfileStatus';\nimport {userPhoto} from '../../Users/User';\nimport ProfileBlockInfoEdit from './ProfileBlockInfoEdit';\nimport {savePhoto, saveProfile} from '../../../redux/profile-reducer';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {Button, Descriptions, Divider, Image} from 'antd';\nimport {geUsersSelector} from '../../../redux/users-reducer';\n\nexport const ProfileInfo = ({profile, status, isOwner}) => {\n    const dispatch = useDispatch()\n    const {isFetching} = useSelector(geUsersSelector)\n    const [editMode, setEditMode] = useState(false)\n\n    if (!profile) {\n        return <Preloader/>\n    }\n    const onChangePhotoSelected = (e) => {\n        if (e.target.files.length) {\n            dispatch(savePhoto(e.target.files[0]))\n        }\n    }\n\n    const goToEditMode = () => setEditMode(true)\n\n    const onSubmit = (formData) => dispatch(saveProfile(formData)).then(() => setEditMode(false))\n\n    return (\n        <>\n            {isFetching ? <Preloader/> :\n                <>\n                    <div style={{\n                        display: 'flex',\n                        position: 'relative'\n                    }}>\n                        <Image\n                            width={250}\n                            src={profile.photos.large || userPhoto}\n                            style={{borderRadius: '10px'}}\n                        />\n                        {isOwner &&\n                            <>\n                                <label style={{\n                                    border: '1px solid #ccc',\n                                    display: 'inline-block',\n                                    padding: '6px 6px',\n                                    bottom: '0',\n                                    background: 'white',\n                                    left: '0',\n                                    margin: '10px',\n                                    cursor: 'pointer',\n                                    borderRadius: '5px',\n                                    position: 'absolute'\n                                }}>\n                                    <input type=\"file\" style={{display: 'none'}} onChange={onChangePhotoSelected}/>Upload\n                                    image\n                                </label>\n                            </>\n                        }\n                        <ProfileStatus statusText={status} isOwner={isOwner}/>\n                    </div>\n                    {editMode\n                        ?\n                        <ProfileBlockInfoEdit profile={profile}\n                                              onSubmit={onSubmit}\n                                              goToEditMode={goToEditMode}\n                        />\n                        :\n                        <ProfileBlockInfo profile={profile}\n                                          isOwner={isOwner}\n                                          goToEditMode={goToEditMode}\n                        />}\n                </>\n\n            }\n        </>\n    )\n}\n\nconst ProfileBlockInfo = ({profile, isOwner, goToEditMode}) => {\n\n    const keys = Object.keys(profile.contacts)\n    let arr = []\n\n    for (let i = 0; i < keys.length; i++) {\n        if (profile.contacts[keys[i]] != null) {\n            arr.push(profile.contacts[keys[i]])\n        }\n    }\n\n    return <div>\n        {isOwner &&\n            <Button onClick={goToEditMode} style={{margin: '10px'}}>Edit profile</Button>\n        }\n        <Divider orientation=\"left\">User Info:</Divider>\n\n        <Descriptions bordered column={1} labelStyle={{width: '200px'}} size=\"small\" style={{width: '500px'}}>\n            {profile.fullName && <Descriptions.Item label=\"Full name:\">{profile.fullName}</Descriptions.Item>}\n            <Descriptions.Item label=\"Looking for a job:\">{profile.lookingForAJob ? 'yes' : 'no'}</Descriptions.Item>\n            {profile.lookingForAJob && <Descriptions.Item\n                label=\"Description about a job:\">{profile.lookingForAJobDescription}</Descriptions.Item>}\n            {profile.aboutMe && <Descriptions.Item label=\"About me:\">{profile.aboutMe}</Descriptions.Item>}\n        </Descriptions>\n\n        {arr != false\n            &&\n            <>\n                <Divider orientation=\"left\">Contacts:</Divider>\n                <ul>\n                    {Object.keys(profile.contacts).map(contact => {\n                        return <Contact key={contact} contactTitle={contact} contactValue={profile.contacts[contact]}/>\n                    })}\n                </ul>\n            </>\n        }\n    </div>\n}\n\nexport const Contact = ({contactTitle, contactValue}) => {\n    return <>\n        {contactValue &&\n            <li style={{fontSize: '18px', fontWeight: '300'}}>{contactTitle}:<a href={contactValue}> {contactValue} </a>\n            </li>}\n    </>\n\n}","import React from 'react';\nimport {Divider, Form} from 'antd';\nimport {FormToAdd} from '../../Common/FormToAdd';\nimport ListItems from '../../Common/ListItems';\n\nconst MyPosts = React.memo(props => {\n            const [form] = Form.useForm();\n\n            let addNewPost = (values) => {\n                props.addPost(values.newPostBody)\n                form.resetFields();\n            }\n\n            return (\n                <>\n                    <Divider orientation=\"left\">My post:</Divider>\n                    {/*NEW POST FORM*/}\n                    <FormToAdd onSubmit={addNewPost} form={form} name=\"newPostBody\" buttonText=\"Add post\"/>\n                    {/*POSTS*/}\n                    <ListItems posts={props.posts} avatar/>\n                </>\n            )\n        }\n    )\n;\n\nexport default MyPosts;\n","import React from \"react\";\nimport {addPostAC} from \"../../../redux/profile-reducer\";\nimport {connect} from \"react-redux\";\nimport MyPosts from \"./MyPosts\";\n\nconst mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.postData,\n        newPostText: state.profilePage.newPostText\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addPost: (values) => {\n            dispatch(addPostAC(values))\n        },\n    }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\nexport default MyPostsContainer;\n","import React from 'react';\nimport {ProfileInfo} from './ProfileInfo/ProfileInfo';\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\n\nexport const Profile = (props) => {\n    return (\n        <div>\n            <ProfileInfo {...props}/>\n            {props.isOwner && <MyPostsContainer/>}\n        </div>\n    )\n}","import React, {useEffect} from 'react';\nimport {Profile} from './Profile';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {geProfileSelector, getStatus, getUserProfile} from '../../redux/profile-reducer';\nimport {Navigate, useNavigate, useParams} from 'react-router-dom';\nimport {geAuthSelector} from '../../redux/auth-reducer';\n\nconst ProfileContainer = () => {\n    const {profile, status} = useSelector(state => geProfileSelector(state))\n    const {isAuth} = useSelector(state => geAuthSelector(state))\n    const authorizedUserId = useSelector(state => geAuthSelector(state).id)\n    const dispatch = useDispatch()\n\n    let navigate = useNavigate();\n    let params = useParams();\n\n    useEffect(() => {\n        let userId;\n        if (params.userId !== undefined) {\n            userId = params.userId\n        } else {\n            userId = authorizedUserId;\n            if (!userId) {\n                navigate('/login')\n            }\n        }\n        dispatch(getUserProfile(userId));\n        dispatch(getStatus(userId))\n    }, [params.userId])\n\n    if (!isAuth) {\n        return <Navigate to={'/login'}/>\n    }\n\n    return (\n        <div>\n            <Profile profile={profile}\n                     status={status}\n                     isOwner={!params.userId}\n            />\n        </div>\n    )\n}\nexport default ProfileContainer","import React from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {geAuthSelector, login} from '../../redux/auth-reducer';\nimport {Navigate} from 'react-router-dom';\nimport {Button, Checkbox, Form, Input} from 'antd';\nimport style from './Login.module.css'\n\nconst Login = () => {\n    const {isAuth, captchaUrl, error} = useSelector(state => geAuthSelector(state))\n    const errorMessage = error\n\n    const dispatch = useDispatch()\n\n    const onSubmit = (formData) => {\n        dispatch(login(formData.username, formData.password, formData.remember, formData.captcha))\n    }\n\n    if (isAuth) {\n        return <Navigate to={'/profile'}/>\n    }\n\n    return <>\n        <h2 className={style.title}>Login</h2>\n        <div className={style.text}>Hello! You can register<a href=\"https://social-network.samuraijs.com/\"\n                                                              target=\"_blank\">here</a>\n            or use this data to log in:\n            <div className={style.dataText}>\n                <div>Email: <span>free@samuraijs.com</span></div>\n                <div>Password: <span>free</span></div>\n            </div>\n        </div>\n\n        <Form\n            name=\"basic\"\n            labelCol={{\n                span: 8,\n            }}\n            wrapperCol={{\n                span: 8,\n            }}\n            initialValues={{\n                remember: true,\n            }}\n            onFinish={onSubmit}\n            autoComplete=\"off\"\n        >\n            <Form.Item\n                label=\"Username\"\n                name=\"username\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please input your username!',\n                    },\n                ]}\n            >\n                <Input/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Password\"\n                name=\"password\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please input your password!',\n                    },\n                ]}\n            >\n                <Input.Password/>\n            </Form.Item>\n\n            <Form.Item\n                name=\"remember\"\n                valuePropName=\"checked\"\n                wrapperCol={{\n                    offset: 8,\n                    span: 16,\n                }}\n            >\n                <Checkbox>Remember me</Checkbox>\n            </Form.Item>\n            {captchaUrl && <div>\n                <p style={{textAlign: 'center'}}><img src={captchaUrl} alt=\"captcha\"/></p>\n                <Form.Item\n                    label=\"Captcha\"\n                    name=\"captcha\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Antibot symbols',\n                        },\n                    ]}\n                >\n                    <Input/>\n                </Form.Item>\n            </div>}\n\n            {errorMessage &&\n                <div style={{\n                    border: '#f32020 2px solid',\n                    padding: '5px',\n                    color: '#fc8d8d',\n                    borderRadius: '7px',\n                    margin: '10px 0'\n                }}><p style={{textAlign: 'center', margin: '0'}}>{errorMessage}</p></div>\n            }\n\n            <Form.Item\n                wrapperCol={{\n                    offset: 8,\n                    span: 16,\n                }}\n            >\n                <Button type=\"primary\" htmlType=\"submit\">\n                    Submit\n                </Button>\n            </Form.Item>\n        </Form>\n    </>\n}\n\nexport default Login;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {geAuthSelector, logout} from '../../redux/auth-reducer';\nimport {Button, Layout} from 'antd';\n\nexport const HeaderContainer = () => {\n    const {isAuth, login} = useSelector((state) => geAuthSelector(state))\n    const dispatch = useDispatch()\n    const {Header} = Layout;\n\n    const logoutHandler = () => {\n        dispatch(logout())\n    }\n\n    return (\n        <Header className=\"header\">\n            <div style={{\n                color: 'white',\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n                fontSize: '16px',\n            }}>\n                <Link to={'/profile/22810'}>\n                    <Button>Show Author Page</Button>\n                </Link>\n                {isAuth\n                    ?\n                    <div>Hello, {login} - <Button onClick={logoutHandler}>Log out</Button></div>\n                    :\n                    <div><Button><Link to={'/login'}>Login</Link></Button></div>\n                }\n            </div>\n        </Header>\n    )\n}","import React, {useEffect} from 'react';\nimport './App.css';\nimport {Link, Route, Routes} from 'react-router-dom';\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\nimport UsersContainer from './components/Users/UsersContainer';\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport Login from './components/Login/Login';\nimport Preloader from './components/Common/Preloader/Preloader';\nimport {initializeApp} from './redux/app-reducer';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {HeaderContainer} from './components/Header/Header'\nimport {Layout, Menu, theme} from 'antd';\nimport {UsergroupAddOutlined, MailOutlined, HomeOutlined} from '@ant-design/icons';\n\nconst {Content, Footer, Sider} = Layout;\n\nfunction getItem(label, key, icon, children) {\n    return {key, icon, children, label,};\n}\n\nconst items = [\n    getItem(<Link to=\"/profile\">Profile</Link>, 'One', <HomeOutlined/>),\n    getItem(<Link to=\"/users\">Users</Link>, 'Two', <UsergroupAddOutlined/>),\n    getItem(<Link to=\"/dialogs\">Messages</Link>, 'Three', <MailOutlined/>),\n];\n\n\nconst App = () => {\n    const {token: {colorBgContainer}} = theme.useToken();\n\n    const initialized = useSelector(state => state.app.initialized)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(initializeApp())\n    }, [])\n\n    return (\n        <>\n            {initialized\n                ?\n                <Layout>\n                    <HeaderContainer/>\n                    <Content style={{padding: '0 50px'}}>\n                        <Layout style={{padding: '24px 0', background: colorBgContainer}}>\n                            <Sider style={{background: colorBgContainer}} width={160}>\n                                <Menu\n                                    mode=\"inline\"\n                                    defaultSelectedKeys={['One']}\n                                    style={{height: '100%'}}\n                                    items={items}\n                                />\n                            </Sider>\n                            <Content style={{padding: '0 24px', minHeight: 280}}>\n                                <Routes>\n                                    <Route path=\"/dialogs\" element={<DialogsContainer/>}/>\n                                    <Route exact path=\"/profile\" element={<ProfileContainer/>}/>\n                                    <Route path=\"/profile/:userId\" element={<ProfileContainer/>}/>\n                                    <Route path=\"/users\" element={<UsersContainer/>}/>\n                                    <Route path=\"/login\" element={<Login/>}/>\n                                    <Route path=\"*\" element={<h1 style={{display: 'flex', justifyContent: 'center'}}>\n                                        404 PAGE NOT FOUND</h1>}/>\n                                </Routes>\n                            </Content>\n                        </Layout>\n                    </Content>\n                    <Footer style={{textAlign: 'center'}}>Social Network ©2022 Created by <a href=\"https://www.linkedin.com/in/michaelnovickiy/\">Mikhail Novickiy</a></Footer>\n                </Layout>\n                :\n                <Preloader/>}\n        </>\n    )\n}\n\nexport default App;","import store from './redux/redux-store';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {HashRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </HashRouter>, document.getElementById('root')\n);\n"],"sourceRoot":""}