{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Users/Users.module.css","redux/dialogs-reducer.ts","api/api.js","redux/profile-reducer.ts","utuls/object-helpers.js","redux/users-reducer.ts","redux/auth-reducer.ts","redux/app-reducer.ts","redux/redux-store.ts","components/Common/FormToAdd/index.jsx","components/Common/ListItems/index.jsx","components/Dialogs/Dialogs.jsx","components/hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx","components/Common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","components/Common/Preloader/Preloader.js","redux/users-selectors.ts","components/Users/UsersContainer.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileBlockInfoEdit.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Login/Login.jsx","components/Header/Header.jsx","App.jsx","index.js"],"names":["module","exports","dialogs","users","initialState","dialogData","id","name","messageData","message","newMessageBody","instance","axios","withCredentials","baseURL","headers","API-KEY","usersAPI","getUsers","currentPage","arguments","length","undefined","pageSize","get","concat","then","response","data","follow","userId","post","unFollow","delete","profileAPI","status","put","photoFile","formData","FormData","append","Content-Type","profile","authAPI","email","password","rememberMe","captcha","securityAPI","_regeneratorRuntime","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","postData","likecount","setStatus","getUserProfile","_ref","asyncToGenerator","_callee","dispatch","_context","_x","apply","updateObjectInArray","items","itemId","objPropName","newObjProps","map","m","objectSpread2","users_reducer_regeneratorRuntime","totalUsersCount","isFetching","followingInProgress","followSuccess","unFollowSuccess","toggleIsFetching","toggleIsFollowingProgress","followUnfollowFlow","_ref2","_callee2","apiMethod","actionCreator","_context2","resultCode","_x2","_x3","_x4","_x5","auth_reducer_regeneratorRuntime","geAuthSelector","auth","login","isAuth","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","setError","errorMessage","getAuthUserData","_response$data$data","_login","getCaptchaUrl","_ref4","_callee4","_context4","url","app_reducer_regeneratorRuntime","initialized","rootReducers","combineReducers","messagesPage","action","messageBody","toConsumableArray","Math","random","toFixed","toString","profilePage","newPost","newPostText","photos","usersPage","followed","count","filter","form","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","___store___","FormToAdd","onSubmit","buttonText","react_default","a","createElement","es_form","onFinish","style","maxWidth","marginBottom","Item","TextArea","allowClear","rows","placeholder","es_button","htmlType","ListItems","posts","avatar","list","itemLayout","dataSource","renderItem","item","Meta","alignItems","es_avatar","backgroundColor","icon","UserOutlined","title","Fragment","dist","to","description","Dialogs","props","_Form$useForm","Form","useForm","slicedToArray","className","Common_ListItems","FormToAdd_FormToAdd","sendMessage","resetFields","mapStateToPropsForRedirect","connect","sendMessageAC","Component","RedirectComponent","_React$Component","inherits","_super","createSuper","classCallCheck","createClass","react_router_dist","React","Paginator","totalItemsCount","onPageChanged","useSelector","pagination","total","current","onChange","showSizeChanger","showQuickJumper","showTotal","userPhoto","User","user","objectWithoutProperties","_excluded","Card","card","hoverable","width","justifySelf","margin","cover","src","small","large","alt","disabled","some","onClick","Users","onClickPageChangedHandler","Common_Paginator_Paginator","Users_User","Preloader","space","size","display","justifyContent","spin","getUsersSelector","createSelector","u","UsersContainer","_this","_len","args","Array","_key","pageNumber","Common_Preloader_Preloader","components_Users_Users","_geUsersSelector","geUsersSelector","_ref3","_callee3","_context3","bind","_x6","_x7","page","getAPI","totalCount","ProfileStatus","statusText","isOwner","_useState","useState","_useState2","editMode","setEditMode","_useState3","_useState4","statusLocal","setStatusLocal","useDispatch","useEffect","fontSize","onDoubleClick","EditOutlined","marginLeft","input","e","currentTarget","autoFocus","onBlur","t0","ProfileBlockInfoEdit","lookingForAJob","setLookingForAJob","contacts","facebook","github","instagram","mainLink","twitter","vk","website","youtube","fullName","lookingForAJobDescription","aboutMe","labelCol","span","wrapperCol","initialValues","label","es_checkbox","checked","divider","orientation","ProfileInfo","goToEditMode","position","es_image","borderRadius","border","padding","bottom","background","left","cursor","file","target","files","ProfileStatus_ProfileStatus","ProfileInfo_ProfileBlockInfoEdit","profileData","_ref5","_callee5","getState","_context5","stopSubmit","_error","messages","ProfileInfo_ProfileBlockInfo","ProfileBlockInfo","descriptions","bordered","column","labelStyle","contact","ProfileInfo_Contact","contactTitle","contactValue","Contact","fontWeight","href","MyPosts","memo","addPost","newPostBody","MyPostsContainer","addPostAC","Profile","ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","ProfileContainer","_useSelector","geProfileSelector","authorizedUserId","navigate","useNavigate","params","useParams","getStatus","Profile_Profile","Login","remember","username","autoComplete","rules","required","Password","valuePropName","offset","textAlign","color","HeaderContainer","Header","Layout","Content","Footer","Sider","getItem","children","HomeOutlined","UsergroupAddOutlined","MailOutlined","App","colorBgContainer","theme","useToken","token","layout","Header_HeaderContainer","menu","mode","defaultSelectedKeys","height","minHeight","path","element","DialogsContainer","exact","Profile_ProfileContainer","Users_UsersContainer","components_Login_Login","ReactDOM","render","react_redux_es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.2e44fe48.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__2Iv27\"};","//types\ntype actionType = {\n    type: typeof SEND_MESSAGE\n    newMessageBody?: string\n}\nconst SEND_MESSAGE = 'SEND_MESSAGE'\ntype dialogStateType = typeof initialState\ntype dialogType = {\n    id: number\n    name: string\n}\ntype messageType = {\n    id: number\n    message: string\n}\ntype sendMessageACType = {\n    type: typeof SEND_MESSAGE\n    newMessageBody: string\n}\n\n//initial state\nlet initialState = {\n    dialogData: [\n        {id: 1, name: 'Alex'},\n        {id: 2, name: 'Artem'},\n        {id: 3, name: 'Daria'},\n        {id: 4, name: 'Dmitriy'},\n    ] as Array<dialogType>,\n    messageData: [\n        {id: 1, message: 'Hello World!'},\n        {id: 2, message: 'How are you?'},\n        {id: 3, message: 'What do you do?'}\n    ] as Array<messageType>,\n    newMessageBody: '',\n}\n\n//reducer\nexport const dialogsReducer = (state: dialogStateType = initialState, action: actionType): dialogStateType => {\n    switch (action.type) {\n        case SEND_MESSAGE : {\n            let messageBody = action.newMessageBody;\n            return <dialogStateType>{\n                ...state,\n                messageData: [...state.messageData,\n                    {\n                        id: ((Math.random() * 100).toFixed(2)).toString(),\n                        message: messageBody\n                    }]\n            };\n        }\n        default:\n            return state;\n    }\n}\n\n//action creator\nexport const sendMessageAC = (newMessageBody: string): sendMessageACType => ({type: SEND_MESSAGE, newMessageBody})","import * as axios from \"axios\";\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\n    headers: {\n        \"API-KEY\": \"e72442e7-e84c-4575-88b8-fbca240ffc79\"\n    }\n})\n\nexport const usersAPI = {\n    getUsers(currentPage = 1, pageSize) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\n            .then(response => response.data);\n    },\n    follow(userId) {\n        return instance.post(`follow/${userId}`,)\n    },\n    unFollow(userId) {\n        return instance.delete(`follow/${userId}`,)\n    }\n}\nexport const profileAPI = {\n    getProfile(userId) {\n        return instance.get(`profile/` + userId)\n    },\n    getStatus(userId) {\n        return instance.get(`profile/status/` + userId)\n    },\n    updateStatus(status) {\n        return instance.put(`profile/status/`, {status: status})\n    },\n    savePhoto(photoFile) {\n        const formData = new FormData();\n        formData.append('image', photoFile)\n\n        return instance.put(`profile/photo`, formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        })\n    },\n    saveProfile(profile) {\n        return instance.put(`profile`, profile)\n    },\n}\nexport const authAPI = {\n    me() {\n        return instance.get(`auth/me`)\n    },\n    login(email, password, rememberMe = false, captcha = null) {\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha})\n    },\n    logout() {\n        return instance.delete(`auth/login`)\n    },\n\n}\nexport const securityAPI = {\n    getCaptchaUrl() {\n        return instance.get(`security/get-captcha-url`)\n    }\n}","import {profileAPI} from '../api/api';\nimport {stopSubmit} from 'redux-form';\nimport { photosType } from './users-reducer';\nimport {appStateType} from './redux-store';\n\n//types\nconst ADD_POST = 'ADD_POST'\nconst SET_USER_PROFILE = 'SET_USER_PROFILE'\nconst SET_STATUS = 'SET_STATUS'\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS'\n\ntype profileStateType = typeof initialState\ntype postType = { id: string, message: string, likecount: string }\ntype profileType = {\n    userId: number\n    lookingForAJob: boolean\n    lookingForAJobDescription: string\n    fullName: string\n    contacts: {\n        github: string\n        vk: string\n        facebook: string\n        instagram: string\n        twitter: string\n        website: string\n        youtube: string\n        mainLink: string\n    }\n}\ntype addPostACType = {\n    type: typeof ADD_POST,\n    values: string\n}\ntype setUserProfileType = {\n    type: typeof SET_USER_PROFILE,\n    profile: profileType\n}\ntype setStatusType = {\n    type: typeof SET_STATUS,\n    status: string\n}\ntype savePhotoSuccessType = {\n    type: typeof SAVE_PHOTO_SUCCESS,\n    photos: photosType\n}\n\n// selector\nexport const geProfileSelector = (state: appStateType) => {\n    return state.profilePage\n}\n\n//initial state\nlet initialState = {\n    postData: [\n        {id: '1', message: 'How are you today?', likecount: '12'},\n        {id: '2', message: 'Hello World!', likecount: '124'},\n        {id: '3', message: 'It is my first post', likecount: '67'},\n    ] as Array<postType>,\n    profile: null as null | profileType,\n    status: '',\n}\n\n//reducer\nexport const profileReducer = (state: profileStateType = initialState, action: any): profileStateType => {\n    switch (action.type) {\n        case ADD_POST: {\n            let newPost = {\n                id: ((Math.random() * 100).toFixed(2)).toString(),\n                message: action.values,\n                likecount: 0,\n            };\n            return <profileStateType>{\n                ...state,\n                postData: [newPost, ...state.postData],\n                newPostText: ''\n            }\n        }\n\n        case SET_USER_PROFILE: {\n            return {\n                ...state,\n                profile: action.profile\n            }\n        }\n        case SET_STATUS: {\n            return {\n                ...state,\n                status: action.status\n            }\n        }\n        case SAVE_PHOTO_SUCCESS: {\n            return <profileStateType>{\n                ...state,\n                profile: {...state.profile, photos: action.photos}\n            }\n        }\n        default:\n            return state;\n    }\n}\n\n//action creators\nexport const addPostAC = (values: string): addPostACType => ({type: ADD_POST, values})\nconst setUserProfile = (profile: profileType): setUserProfileType => ({type: SET_USER_PROFILE, profile})\nconst setStatus = (status: string): setStatusType => ({type: SET_STATUS, status})\nconst savePhotoSuccess = (photos: photosType): savePhotoSuccessType => ({type: SAVE_PHOTO_SUCCESS, photos})\n\n//thanks\nexport const getUserProfile = (userId: number) => async (dispatch: any) => {\n    const response = await profileAPI.getProfile(userId)\n    dispatch(setUserProfile(response.data));\n}\n\nexport const getStatus = (userId: number) => async (dispatch: any) => {\n    const response = await profileAPI.getStatus(userId)\n    dispatch(setStatus(response.data));\n}\nexport const updateStatus = (status: string) => async (dispatch: any) => {\n    try {\n        const response = await profileAPI.updateStatus(status)\n        if (response.data.resultCode === 0) {\n            dispatch(setStatus(status));\n        }\n    } catch (error) {\n        //some error we can add dispatch\n    }\n}\nexport const savePhoto = (file: any) => async (dispatch: any) => {\n    // @ts-ignore\n    const response = await profileAPI.savePhoto(file);\n    if (response.data.resultCode === 0) {\n        dispatch(savePhotoSuccess(response.data.data.photos));\n    }\n}\nexport const saveProfile = (profileData: any) => async (dispatch: any, getState: any) => {\n    const userId = getState().auth.id;\n    // @ts-ignore\n    const response = await profileAPI.saveProfile(profileData);\n    if (response.data.resultCode === 0) {\n        dispatch(getUserProfile(userId));\n    } else {\n        dispatch(stopSubmit('edit-profile', {_error: response.data.messages[0]}))\n        return Promise.reject(response.data.messages[0])\n    }\n}\n","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\n    return items.map(m => {\n        if (m[objPropName] === itemId) {\n            return {...m, ...newObjProps}\n        }\n        return m;\n    })\n}","import {usersAPI, usersAPI as getAPI} from '../api/api';\nimport {updateObjectInArray} from '../utuls/object-helpers';\nimport {appStateType} from './redux-store';\n\n//types\nconst FOLLOW_BUTTON = 'FOLLOW_BUTTON'\nconst UNFOLLOW_BUTTON = 'UNFOLLOW_BUTTON'\nconst SET_USERS = 'SET_USERS'\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT'\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS'\n\ntype followSuccessType = { type: typeof FOLLOW_BUTTON, userId: number }\ntype unFollowSuccessType = { type: typeof UNFOLLOW_BUTTON, userId: number }\ntype setUsersType = { type: typeof SET_USERS, users: usersType }\ntype setCurrentPageType = { type: typeof SET_CURRENT_PAGE, currentPage: number }\ntype setTotalUsersCountType = { type: typeof SET_TOTAL_USERS_COUNT, count: number }\ntype toggleIsFetchingType = { type: typeof TOGGLE_IS_FETCHING, isFetching: boolean }\ntype toggleIsFollowingProgressType = { type: typeof TOGGLE_IS_FOLLOWING_PROGRESS, isFetching: boolean, userId: number }\n\nexport type photosType = {\n    small: null | string\n    large: null | string\n}\n\nexport type usersType = {\n    name: string,\n    id: number,\n    uniqueUrlName: null,\n    photos: photosType,\n    status: null,\n    followed: boolean,\n}\n\n// selector\nexport const geUsersSelector = (state: appStateType) => {\n    return state.usersPage\n}\n\n//initial state\nlet initialState = {\n    users: [] as Array<usersType>,\n    pageSize: 16,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: false,\n    followingInProgress: [] as Array<number>\n}\nexport type userStateType = typeof initialState\n\n//reducer\nexport const usersReducer = (state: userStateType = initialState, action: any) => {\n    switch (action.type) {\n        case FOLLOW_BUTTON: {\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})\n            }\n        }\n        case UNFOLLOW_BUTTON: {\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\n            }\n        }\n        case SET_USERS: {\n            return {...state, users: [...action.users]}\n        }\n        case SET_CURRENT_PAGE: {\n            return {...state, currentPage: action.currentPage}\n        }\n        case SET_TOTAL_USERS_COUNT: {\n            return {...state, totalUsersCount: action.count}\n        }\n        case TOGGLE_IS_FETCHING: {\n            return {...state, isFetching: action.isFetching}\n        }\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\n            return {\n                ...state, followingInProgress: action.isFetching ?\n                    [...state.followingInProgress, action.userId] :\n                    state.followingInProgress.filter(id => id != action.userId)\n            }\n        }\n        default:\n            return state;\n    }\n}\n\n//action creators\nexport const followSuccess = (userId: number): followSuccessType => ({type: FOLLOW_BUTTON, userId})\nexport const unFollowSuccess = (userId: number): unFollowSuccessType => ({type: UNFOLLOW_BUTTON, userId})\nexport const setUsers = (users: usersType): setUsersType => ({type: SET_USERS, users})\nexport const setCurrentPage = (currentPage: number): setCurrentPageType => ({type: SET_CURRENT_PAGE, currentPage})\nexport const setTotalUsersCount = (totalUsers: number): setTotalUsersCountType => ({\n    type: SET_TOTAL_USERS_COUNT,\n    count: totalUsers\n})\nexport const toggleIsFetching = (isFetching: boolean): toggleIsFetchingType => ({type: TOGGLE_IS_FETCHING, isFetching})\nexport const toggleIsFollowingProgress = (isFetching: boolean, userId: number): toggleIsFollowingProgressType => ({\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\n    isFetching,\n    userId\n})\n\n//thanks\nexport const requestUsers = (page: any, pageSize: any) => {\n    return async (dispatch: any) => {\n        dispatch(toggleIsFetching(true))\n        dispatch(setCurrentPage(page))\n\n        const data = await getAPI.getUsers(page, pageSize)\n        dispatch(toggleIsFetching(false))\n        dispatch(setUsers(data.items));\n        dispatch(setTotalUsersCount(data.totalCount));\n    }\n}\n\nconst followUnfollowFlow = async (dispatch: any, userId: any, apiMethod: any, actionCreator: any) => {\n    dispatch(toggleIsFollowingProgress(true, userId))\n    const response = await apiMethod(userId)\n    if (response.data.resultCode === 0) {\n        dispatch(actionCreator(userId))\n    }\n    dispatch(toggleIsFollowingProgress(false, userId))\n}\n\nexport const follow = (userId: any) => {\n    return async (dispatch: any) => {\n        await followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess)\n    }\n}\nexport const unFollow = (userId: any) => {\n    return async (dispatch: any) => {\n        await followUnfollowFlow(dispatch, userId, usersAPI.unFollow.bind(usersAPI), unFollowSuccess)\n    }\n}\n\n","import {authAPI, securityAPI} from '../api/api';\nimport {appStateType} from './redux-store';\n\n//types\nconst SET_USER_DATA = 'AUTH_SET_USER_DATA'\nconst GET_CAPTCHA_URL_SUCCESS = 'GET_CAPTCHA_URL_SUCCESS'\nconst SET_ERROR = 'SET_ERROR'\ntype stateType = typeof initialState;\ntype setAuthUserDataPayloadType = { id: number | null, email: string | null, login: string | null, isAuth: boolean }\ntype setAuthUserDataType = {\n    type: typeof SET_USER_DATA,\n    payload: setAuthUserDataPayloadType\n}\ntype getCaptchaUrlSuccessType = { type: typeof GET_CAPTCHA_URL_SUCCESS, payload: { captchaUrl: string } }\n\n// selector\nexport const geAuthSelector = (state: appStateType) => {\n    return state.auth\n}\n\n//initial state\nlet initialState = {\n    id: null as number | null,\n    email: null as string | null,\n    login: null as string | null,\n    isAuth: false,\n    captchaUrl: null as string | null,\n    error: ''\n}\n\n//reducer\nexport const authReducer = (state: stateType = initialState, action: any): stateType => {\n    switch (action.type) {\n        case SET_USER_DATA:\n        case GET_CAPTCHA_URL_SUCCESS: {\n            return {...state, ...action.payload}\n        }\n        case SET_ERROR: {\n            return {...state, error: action.payload}\n        }\n\n        default:\n            return state;\n    }\n}\n\n//action creators\nexport const setAuthUserData = (id: number | null, email: string | null, login: string | null, isAuth: boolean): setAuthUserDataType => (\n    {type: SET_USER_DATA, payload: {id, email, login, isAuth}})\n\nexport const getCaptchaUrlSuccess = (captchaUrl: string): getCaptchaUrlSuccessType => ({\n    type: GET_CAPTCHA_URL_SUCCESS,\n    payload: {captchaUrl}\n})\n\nexport const setError = (errorMessage: string): any => ({type: SET_ERROR, payload: errorMessage})\n\n//thanks\nexport const getAuthUserData = () => async (dispatch: any) => {\n    let response = await authAPI.me();\n    if (response.data.resultCode === 0) {\n        let {id, login, email} = response.data.data;\n        dispatch(setAuthUserData(id, email, login, true))\n    }\n}\n\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: any) => async (dispatch: any) => {\n    const response = await authAPI.login(email, password, rememberMe, captcha)\n    if (response.data.resultCode === 0) {\n        dispatch(getAuthUserData())\n    } else {\n        if (response.data.resultCode === 10) {\n            dispatch(getCaptchaUrl())\n        }\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error'\n        dispatch(setError(message))\n    }\n}\n\nexport const logout = () => async (dispatch: any) => {\n    const response = await authAPI.logout()\n    if (response.data.resultCode === 0) {\n        dispatch(setAuthUserData(null, null, null, false))\n    }\n    dispatch(setError(''))\n}\n\nexport const getCaptchaUrl = () => async (dispatch: any) => {\n    const response = await securityAPI.getCaptchaUrl()\n    const captchaUrl = response.data.url\n    dispatch(getCaptchaUrlSuccess(captchaUrl))\n}\n\n","import {getAuthUserData} from './auth-reducer';\n\n//types\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS'\ntype stateType = { initialized: boolean }\ntype initializedSuccessActionType = { type: typeof INITIALIZED_SUCCESS }\ntype actionType = { type: typeof INITIALIZED_SUCCESS }\n\n//initial state\nlet initialState: stateType = {initialized: false}\n\n//reducer\nexport const appReducer = (state = initialState, action: actionType): stateType => {\n    switch (action.type) {\n        case INITIALIZED_SUCCESS: {\n            return {\n                ...state,\n                initialized: true\n            }\n        }\n        default:\n            return state;\n    }\n}\n\n//Action Creator\nexport const initializedSuccess = (): initializedSuccessActionType => ({type: INITIALIZED_SUCCESS})\n\n//Thank\nexport const initializeApp = () => async (dispatch: any) => {\n    await dispatch(getAuthUserData());\n    dispatch(initializedSuccess());\n};\n\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\nimport {dialogsReducer} from \"./dialogs-reducer\";\nimport {profileReducer} from \"./profile-reducer\";\nimport {usersReducer} from \"./users-reducer\";\nimport {authReducer} from \"./auth-reducer\";\nimport thunkMiddleware from \"redux-thunk\";\nimport {reducer as formReducer} from \"redux-form\";\nimport {appReducer} from \"./app-reducer\";\n\ntype rootReducerType = typeof rootReducers\nexport type appStateType = ReturnType<rootReducerType>\n\nlet rootReducers = combineReducers({\n    messagesPage: dialogsReducer,\n    profilePage: profileReducer,\n    usersPage: usersReducer,\n    auth: authReducer,\n    form: formReducer,\n    app: appReducer,\n})\n\n// @ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nlet store = createStore(rootReducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\n\n// @ts-ignore\nwindow.___store___ = store\nexport default store;","import React from 'react';\nimport {Button, Form} from 'antd';\nimport TextArea from 'antd/es/input/TextArea';\n\nexport const FormToAdd = ({onSubmit, form, name, buttonText}) => {\n    return (\n        <Form name={name}\n              form={form}\n              onFinish={onSubmit}\n              style={{maxWidth: '400px', marginBottom: '20px'}}\n        >\n            <Form.Item name={name}>\n                <TextArea allowClear\n                          rows={4}\n                          placeholder=\"Enter your message\"/>\n            </Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">{buttonText}</Button>\n        </Form>\n    );\n};","import React from 'react';\nimport {Avatar, List} from 'antd';\nimport {UserOutlined} from '@ant-design/icons';\nimport {Link} from 'react-router-dom';\n\nconst ListItems = ({posts, avatar}) => {\n    \n    return (\n        <List\n            itemLayout=\"horizontal\"\n            dataSource={posts}\n            renderItem={(item) => (\n                <List.Item>\n                    <List.Item.Meta\n                        style={{alignItems: 'center'}}\n                        avatar={avatar && <Avatar style={{backgroundColor: '#87d068'}} icon={<UserOutlined/>}/>}\n                        title={<>\n                            {item.message && <p>{item.message}</p>}\n                            {item.name &&  <Link to={'/dialogs/' + item.id}>{item.name}</Link> }\n                        </>}\n                        description={item.likecount && <p>Likes: {item.likecount}</p>}\n                    />\n                </List.Item>\n            )}\n        />\n    );\n};\n\nexport default ListItems;","import React from 'react';\nimport style from './Dialogs.module.css'\nimport {FormToAdd} from '../Common/FormToAdd';\nimport {Form} from 'antd';\nimport ListItems from '../Common/ListItems';\n\nconst Dialogs = (props) => {\n    const [form] = Form.useForm();\n\n    let addNewMessage = (values) => {\n        props.sendMessage(values.newMessageBody)\n        form.resetFields();\n    }\n\n    return (\n        <div className={style.dialogs}>\n            <div>\n                <h3>Friends</h3>\n                <ListItems posts={props.messagesPage.dialogData} avatar/>\n            </div>\n            <div>\n                <h3>Messages</h3>\n                <ListItems posts={props.messagesPage.messageData}/>\n                <FormToAdd onSubmit={addNewMessage} form={form} name=\"newMessageBody\" buttonText=\"Add message\"/>\n            </div>\n        </div>\n    )\n}\n\nexport default Dialogs;","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\n\nlet mapStateToPropsForRedirect = (state) => {\n    return {\n        isAuth: state.auth.isAuth\n    }\n}\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Navigate to={\"/login\"}/>\n\n            return <Component {...this.props} />\n        }\n    }\n\n        let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n\n    return ConnectedAuthRedirectComponent\n}\n","import React from 'react';\nimport {sendMessageAC} from \"../../redux/dialogs-reducer\";\nimport {connect} from \"react-redux\";\nimport Dialogs from \"./Dialogs\";\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nlet mapStateToProps = (state) => {\n    return {\n        messagesPage : state.messagesPage,\n    }\n}\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        sendMessage: (newMessageBody) => {\n            dispatch(sendMessageAC(newMessageBody))\n        }\n    }\n}\n\nexport default compose (\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n) (Dialogs)\n\n","import React from 'react';\nimport {Pagination} from 'antd';\nimport {useSelector} from 'react-redux';\n\nconst Paginator = ({totalItemsCount, currentPage, onPageChanged}) => {\n    const pageSize = useSelector((state => state.usersPage.pageSize))\n\n    return <Pagination\n        total={totalItemsCount}\n        current={currentPage}\n        pageSize={pageSize}\n        onChange={onPageChanged}\n        showSizeChanger={false}\n        showQuickJumper\n        showTotal={(totalItemsCount) => `Total ${totalItemsCount} items`}\n    />\n}\n\nexport default Paginator\n\n\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {Button, Card} from 'antd';\n\nexport const userPhoto = 'https://www.pngitem.com/pimgs/m/80-800194_transparent-users-icon-png-flat-user-icon-png.png'\nlet User = ({user, followingInProgress, unFollow, follow, ...props}) => {\n    const {Meta} = Card;\n\n    return <Card\n        hoverable\n        style={{\n            width: 240,\n            justifySelf: \"center\",\n            margin: \"20px 0\"\n        }}\n        cover={<Link to={'/profile/' + user.id}>\n            <img style={{width: '100%'}}\n                 src={user.photos.small != null ? user.photos.large : userPhoto}\n                 alt=\"photo\"/>\n        </Link>}\n    >\n        <Meta title={user.name} description={user.status}/>\n        <div style={{margin: '10px auto'}}>\n            {user.followed ?\n                <Button disabled={followingInProgress.some(id => id === user.id)}\n                        onClick={() => unFollow(user.id)}>Unfollow</Button>\n                :\n                <Button disabled={followingInProgress.some(id => id === user.id)}\n                        onClick={() => follow(user.id)}>Follow</Button>\n            }\n        </div>\n    </Card>\n\n}\nexport default User","import React from 'react';\nimport Paginator from '../Common/Paginator/Paginator';\nimport User from './User';\nimport style from './Users.module.css'\n\nlet Users = ({\n                 totalUsersCount, currentPage, onClickPageChangedHandler, users, followingInProgress,\n                 unFollow, follow\n             }) => {\n\n    return <div>\n        <Paginator totalItemsCount={totalUsersCount}\n                   currentPage={currentPage}\n                   onPageChanged={onClickPageChangedHandler}/>\n\n        <div className={style.users}>\n            {users.map(m => <User key={m.id}\n                                  user={m}\n                                  followingInProgress={followingInProgress}\n                                  unFollow={unFollow}\n                                  follow={follow}\n\n            />)}\n        </div>\n    </div>\n}\nexport default Users","import React from 'react';\nimport { Space, Spin } from 'antd';\n\nconst Preloader = () => (\n    <Space size=\"large\" style={{display: 'flex', justifyContent: \"center\", alignItems: \"center \", width: \"100%\"}}>\n        <Spin size=\"large\" />\n    </Space>\n);\n\nexport default Preloader;","import {createSelector} from \"reselect\";\nimport {appStateType} from \"./redux-store\";\nimport {usersType} from './users-reducer';\n\nexport const getUsers = (state: appStateType) => {\n    return state.usersPage.users\n}\nexport const getUsersSelector = createSelector(getUsers,  (users: Array<usersType>) => {\n    return users.filter(u => true)\n})","import React from 'react';\nimport {connect} from 'react-redux';\nimport {follow, geUsersSelector, requestUsers, unFollow} from '../../redux/users-reducer';\nimport Users from './Users';\nimport Preloader from '../Common/Preloader/Preloader';\nimport {compose} from 'redux';\nimport {getUsersSelector} from '../../redux/users-selectors';\n\nclass UsersContainer extends React.Component {\n    componentDidMount() {\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\n    };\n\n    onClickPageChangedHandler = (pageNumber) => {\n        this.props.getUsers(pageNumber, this.props.pageSize);\n    }\n\n    render() {\n        return <>\n            {this.props.isFetching ? <Preloader/> : null}\n            <Users totalUsersCount={this.props.totalUsersCount}\n                   currentPage={this.props.currentPage}\n                   users={this.props.users}\n                   follow={this.props.follow}\n                   unFollow={this.props.unFollow}\n                   onClickPageChangedHandler={this.onClickPageChangedHandler}\n                   followingInProgress={this.props.followingInProgress}\n            />\n        </>\n    }\n}\n\nlet mapStateToProps = (state) => {\n    const {totalUsersCount, currentPage, isFetching, followingInProgress, pageSize} = geUsersSelector(state)\n    return {\n        totalUsersCount, currentPage, isFetching, followingInProgress,  pageSize,\n        users: getUsersSelector(state),\n    }\n};\n\nexport default (compose(\n    connect(mapStateToProps, {follow, unFollow, getUsers: requestUsers}))(UsersContainer));","import React, {useEffect, useState} from 'react';\nimport {updateStatus} from '../../../redux/profile-reducer';\nimport {useDispatch} from 'react-redux';\nimport {Input} from 'antd';\nimport {EditOutlined} from '@ant-design/icons';\n\nexport const ProfileStatus = ({statusText, isOwner}) => {\n    let [editMode, setEditMode] = useState(false)\n    let [statusLocal, setStatusLocal] = useState(statusText)\n    const dispatch = useDispatch()\n\n    useEffect(() => setStatusLocal(statusText), [statusText])\n\n    const activateEditMode = () => isOwner && setEditMode(true)\n\n    const deactivateEditMode = () => {\n        isOwner &&\n        setEditMode(false)\n        dispatch(updateStatus(statusLocal));\n    }\n\n    const onStatusChange = (e) => setStatusLocal(e.currentTarget.value)\n\n    return (\n        <div style={{margin: '10px'}}>\n            {!editMode && <div style={{fontSize: '20px'}}>\n                <span onDoubleClick={activateEditMode}>{statusText || 'No status'}</span>\n                <EditOutlined style={{marginLeft: '10px'}}/>\n            </div>}\n\n            {editMode && <div>\n                <Input onChange={onStatusChange} autoFocus onBlur={deactivateEditMode}\n                       value={statusLocal}/>\n            </div>}\n        </div>\n    )\n}\n","import React, {useState} from 'react';\nimport {Button, Checkbox, Divider, Form, Input} from 'antd';\nimport TextArea from 'antd/es/input/TextArea';\n\nconst ProfileBlockInfoEdit = ({onSubmit, profile}) => {\n    const [lookingForAJob, setLookingForAJob] = useState(profile.lookingForAJob)\n\n    let addChanges = (values) => {\n        const contacts = {\n            facebook: values.facebook || null,\n            github: values.github || null,\n            instagram: values.instagram || null,\n            mainLink: values.mainLink || null,\n            twitter: values.twitter || null,\n            vk: values.vk || null,\n            website: values.website || null,\n            youtube: values.youtube || null,\n        }\n        onSubmit({\n            fullName: values.fullName || null,\n            lookingForAJob: lookingForAJob,\n            lookingForAJobDescription: values.lookingForAJobDescription || null,\n            aboutMe: values.aboutMe || null,\n            contacts: contacts\n        })\n    }\n\n    return (\n        <Form name=\"changeProfile\"\n              onFinish={addChanges}\n              labelCol={{span: 4}}\n              wrapperCol={{span: 8}}\n              initialValues={{...profile, ...profile.contacts}}\n        >\n            {<Button type=\"primary\" htmlType=\"submit\" style={{margin: \"10px\"}}>Save</Button>}\n            <Form.Item name=\"fullName\" label=\"Full name:\"><Input placeholder=\"Full name\"/></Form.Item>\n            <Form.Item name=\"lookingForAJob\" label=\"Looking for a job:\">\n                <Checkbox checked={lookingForAJob}\n                          onChange={() => setLookingForAJob(!lookingForAJob)}/>\n            </Form.Item>\n            <Form.Item name=\"lookingForAJobDescription\" label=\"Description about a job:\">\n                <TextArea allowClear\n                          placeholder=\"Description about a job\"/>\n            </Form.Item>\n            <Form.Item name=\"aboutMe\" label=\"About me:\">\n                <TextArea allowClear\n                          placeholder=\"About me\"/>\n            </Form.Item>\n\n            <Divider orientation=\"left\">Contacts:</Divider>\n            {Object.keys(profile.contacts).map(key => {\n                return <Form.Item name={key} label={key + ':'} key={key}>\n                    <Input/>\n                </Form.Item>\n            })}\n        </Form>\n    )\n}\n\nexport default ProfileBlockInfoEdit","import React, {useState} from 'react';\nimport Preloader from '../../Common/Preloader/Preloader';\nimport {ProfileStatus} from './ProfileStatus';\nimport {userPhoto} from '../../Users/User';\nimport ProfileBlockInfoEdit from './ProfileBlockInfoEdit';\nimport {savePhoto, saveProfile} from '../../../redux/profile-reducer';\nimport {useDispatch} from 'react-redux';\nimport {Button, Descriptions, Divider, Image, Input} from 'antd';\n\nexport const ProfileInfo = ({profile, status, isOwner}) => {\n    const dispatch = useDispatch()\n    const [editMode, setEditMode] = useState(false)\n\n    if (!profile) {\n        return <Preloader/>\n    }\n    const onChangePhotoSelected = (e) => {\n        if (e.target.files.length) {\n            dispatch(savePhoto(e.target.files[0]))\n        }\n    }\n\n    const goToEditMode = () => setEditMode(true)\n\n    const onSubmit = (formData) => dispatch(saveProfile(formData)).then(() => setEditMode(false))\n\n    return (\n        <>\n            <div style={{\n                display: 'flex',\n                position: 'relative'\n            }}>\n                <Image\n                    width={250}\n                    src={profile.photos.large || userPhoto}\n                    style={{borderRadius: \"10px\"}}\n                />\n                {isOwner &&\n                    <>\n                        <label style={{\n                            border: '1px solid #ccc',\n                            display: 'inline-block',\n                            padding: '6px 6px',\n                            bottom: '0',\n                            background: 'white',\n                            left: '0',\n                            margin: '10px',\n                            cursor: 'pointer',\n                            borderRadius: '5px',\n                            position: 'absolute'\n                        }}>\n                            <input type=\"file\" style={{display: 'none'}} onChange={onChangePhotoSelected}/>Upload image\n                        </label>\n                    </>\n                }\n                <ProfileStatus statusText={status} isOwner={isOwner}/>\n            </div>\n            {editMode\n                ?\n                <ProfileBlockInfoEdit profile={profile}\n                                      onSubmit={onSubmit}\n                                      goToEditMode={goToEditMode}\n                />\n                :\n                <ProfileBlockInfo profile={profile}\n                                  isOwner={isOwner}\n                                  goToEditMode={goToEditMode}\n                />}\n        </>\n    )\n}\n\nconst ProfileBlockInfo = ({profile, isOwner, goToEditMode}) => {\n    return <div>\n        {isOwner &&\n            <Button onClick={goToEditMode} style={{margin: \"10px\"}}>Edit profile</Button>\n        }\n        <Divider orientation=\"left\">User Info:</Divider>\n\n        <Descriptions bordered column={1} labelStyle={{width: '200px'}} size=\"small\" style={{width: '500px'}}>\n            {profile.fullName && <Descriptions.Item label=\"Full name:\">{profile.fullName}</Descriptions.Item>}\n            <Descriptions.Item label=\"Looking for a job:\">{profile.lookingForAJob ? 'yes' : 'no'}</Descriptions.Item>\n            {profile.lookingForAJob && <Descriptions.Item\n                label=\"Description about a job:\">{profile.lookingForAJobDescription}</Descriptions.Item>}\n            {profile.aboutMe && <Descriptions.Item label=\"About me:\">{profile.aboutMe}</Descriptions.Item>}\n        </Descriptions>\n\n        <Divider orientation=\"left\">Contacts:</Divider>\n        <ul>\n            {Object.keys(profile.contacts).map(contact => {\n                return <Contact key={contact} contactTitle={contact} contactValue={profile.contacts[contact]}/>\n            })}\n        </ul>\n    </div>\n}\n\nexport const Contact = ({contactTitle, contactValue}) => {\n    return <>\n        {contactValue &&\n            <li style={{fontSize: '18px', fontWeight: '300'}}>{contactTitle}:<a href={contactValue}> {contactValue} </a>\n            </li>}\n    </>\n\n}","import React from 'react';\nimport {Divider, Form} from 'antd';\nimport {FormToAdd} from '../../Common/FormToAdd';\nimport ListItems from '../../Common/ListItems';\n\nconst MyPosts = React.memo(props => {\n            const [form] = Form.useForm();\n\n            let addNewPost = (values) => {\n                props.addPost(values.newPostBody)\n                form.resetFields();\n            }\n\n            return (\n                <>\n                    <Divider orientation=\"left\">My post:</Divider>\n                    {/*NEW POST FORM*/}\n                    <FormToAdd onSubmit={addNewPost} form={form} name=\"newPostBody\" buttonText=\"Add post\"/>\n                    {/*POSTS*/}\n                    <ListItems posts={props.posts} avatar/>\n                </>\n            )\n        }\n    )\n;\n\nexport default MyPosts;\n","import React from \"react\";\nimport {addPostAC} from \"../../../redux/profile-reducer\";\nimport {connect} from \"react-redux\";\nimport MyPosts from \"./MyPosts\";\n\nconst mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.postData,\n        newPostText: state.profilePage.newPostText\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addPost: (values) => {\n            dispatch(addPostAC(values))\n        },\n    }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\nexport default MyPostsContainer;\n","import React from \"react\";\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\nexport const Profile = (props) => {\n    return (\n        <div>\n            <ProfileInfo {...props}/>\n            <MyPostsContainer/>\n        </div>\n    )\n}","import React, {useEffect} from 'react';\nimport {Profile} from './Profile';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {geProfileSelector, getStatus, getUserProfile} from '../../redux/profile-reducer';\nimport {useNavigate, useParams} from 'react-router-dom';\nimport {geAuthSelector} from '../../redux/auth-reducer';\n\nconst ProfileContainer = () => {\n    const {profile, status} = useSelector(state => geProfileSelector(state))\n    const authorizedUserId = useSelector(state => geAuthSelector(state).id)\n    const dispatch = useDispatch()\n\n    let navigate = useNavigate();\n    let params = useParams();\n\n    useEffect(() => {\n        let userId;\n        if (params.userId !== undefined) {\n            userId = params.userId\n        } else {\n            userId = authorizedUserId;\n            if (!userId) {\n                navigate('/login')\n            }\n        }\n        dispatch(getUserProfile(userId));\n        dispatch(getStatus(userId))\n    }, [params.userId])\n\n    return (\n        <div>\n            <Profile profile={profile}\n                     status={status}\n                     isOwner={!params.userId}\n            />\n        </div>\n    )\n}\nexport default ProfileContainer","import React from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {login} from '../../redux/auth-reducer';\nimport {Navigate} from 'react-router-dom';\nimport {Button, Checkbox, Form, Input} from 'antd';\n\nconst Login = () => {\n    const isAuth = useSelector((state) => state.auth.isAuth)\n    const captchaUrl = useSelector((state) => state.auth.captchaUrl)\n    const errorMessage = useSelector((state) => state.auth.error)\n\n    const dispatch = useDispatch()\n\n    const onSubmit = (formData) => {\n        dispatch(login(formData.username, formData.password, formData.remember, formData.captcha))\n    }\n\n    if (isAuth) {\n        return <Navigate to={'/profile'}/>\n    }\n\n    return <>\n        <h1>Login</h1>\n        <Form\n            name=\"basic\"\n            labelCol={{\n                span: 8,\n            }}\n            wrapperCol={{\n                span: 16,\n            }}\n            initialValues={{\n                remember: true,\n            }}\n            onFinish={onSubmit}\n            autoComplete=\"off\"\n        >\n            <Form.Item\n                label=\"Username\"\n                name=\"username\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please input your username!',\n                    },\n                ]}\n            >\n                <Input/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Password\"\n                name=\"password\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please input your password!',\n                    },\n                ]}\n            >\n                <Input.Password/>\n            </Form.Item>\n\n            <Form.Item\n                name=\"remember\"\n                valuePropName=\"checked\"\n                wrapperCol={{\n                    offset: 8,\n                    span: 16,\n                }}\n            >\n                <Checkbox>Remember me</Checkbox>\n            </Form.Item>\n            {captchaUrl && <div>\n                <p style={{textAlign: 'center'}}><img src={captchaUrl} alt=\"captcha\"/></p>\n                <Form.Item\n                    label=\"Captcha\"\n                    name=\"captcha\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Antibot symbols',\n                        },\n                    ]}\n                >\n                    <Input/>\n                </Form.Item>\n            </div>}\n\n            {errorMessage &&\n                <div style={{\n                    border: '#f32020 2px solid',\n                    padding: '5px',\n                    color: '#fc8d8d',\n                    borderRadius: '7px',\n                    margin: '10px 0'\n                }}><p style={{textAlign: 'center', margin: '0'}}>{errorMessage}</p></div>\n            }\n\n            <Form.Item\n                wrapperCol={{\n                    offset: 8,\n                    span: 16,\n                }}\n            >\n                <Button type=\"primary\" htmlType=\"submit\">\n                    Submit\n                </Button>\n            </Form.Item>\n        </Form>\n    </>\n}\n\nexport default Login;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {geAuthSelector, logout} from '../../redux/auth-reducer';\nimport {Button, Layout} from 'antd';\n\nexport const HeaderContainer = () => {\n    const {isAuth, login} = useSelector((state) => geAuthSelector(state))\n    const dispatch = useDispatch()\n    const {Header} = Layout;\n\n    const logoutHandler = () => {\n        dispatch(logout())\n    }\n\n    return (\n        <Header className=\"header\">\n            <div style={{\n                color: 'white',\n                display: 'flex',\n                justifyContent: 'flex-end',\n                alignItems: 'center',\n                fontSize: '16px',\n            }}>\n                {isAuth\n                    ?\n                    <div>Hello, {login} - <Button onClick={logoutHandler}>Log out</Button></div>\n                    :\n                    <div><Button><Link to={'/login'}>Login</Link></Button></div>\n                }\n            </div>\n        </Header>\n    )\n}","import React, {useEffect} from 'react';\nimport './App.css';\nimport {Link, Route, Routes} from 'react-router-dom';\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\nimport UsersContainer from './components/Users/UsersContainer';\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport Login from './components/Login/Login';\nimport Preloader from './components/Common/Preloader/Preloader';\nimport {initializeApp} from './redux/app-reducer';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {HeaderContainer} from './components/Header/Header'\nimport {Layout, Menu, theme} from 'antd';\nimport {UsergroupAddOutlined, MailOutlined, HomeOutlined} from '@ant-design/icons';\n\nconst {Content, Footer, Sider} = Layout;\n\nfunction getItem(label, key, icon, children) {\n    return {key, icon, children, label,};\n}\n\nconst items = [\n    getItem(<Link to=\"/profile\">Profile</Link>, 'One', <HomeOutlined/>),\n    getItem(<Link to=\"/users\">Users</Link>, 'Two', <UsergroupAddOutlined/>),\n    getItem(<Link to=\"/dialogs\">Messages</Link>, 'Three', <MailOutlined/>),\n];\n\n\nconst App = () => {\n    const {token: {colorBgContainer}} = theme.useToken();\n\n    const initialized = useSelector(state => state.app.initialized)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(initializeApp())\n    }, [])\n\n    return (\n        <>\n            {initialized\n                ?\n                <Layout>\n                    <HeaderContainer/>\n                    <Content style={{padding: '0 50px'}}>\n                        <Layout style={{padding: '24px 0', background: colorBgContainer}}>\n                            <Sider style={{background: colorBgContainer}} width={160}>\n                                <Menu\n                                    mode=\"inline\"\n                                    defaultSelectedKeys={['One']}\n                                    style={{height: '100%'}}\n                                    items={items}\n                                />\n                            </Sider>\n                            <Content style={{padding: '0 24px', minHeight: 280}}>\n                                <Routes>\n                                    <Route path=\"/dialogs\" element={<DialogsContainer/>}/>\n                                    <Route exact path=\"/profile\" element={<ProfileContainer/>}/>\n                                    <Route path=\"/profile/:userId\" element={<ProfileContainer/>}/>\n                                    <Route path=\"/users\" element={<UsersContainer/>}/>\n                                    <Route path=\"/login\" element={<Login/>}/>\n                                    <Route path=\"*\" element={<h1 style={{display: 'flex', justifyContent: 'center'}}>\n                                        404 PAGE NOT FOUND</h1>}/>\n                                </Routes>\n                            </Content>\n                        </Layout>\n                    </Content>\n                    <Footer style={{textAlign: 'center'}}>Social Network ©2022 Created by Mikhail Novickiy</Footer>\n                </Layout>\n                :\n                <Preloader/>}\n        </>\n    )\n}\n\nexport default App;","import store from './redux/redux-store';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {HashRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\n\nReactDOM.render(\n    <HashRouter >\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </HashRouter>, document.getElementById('root')\n);\n"],"sourceRoot":""}